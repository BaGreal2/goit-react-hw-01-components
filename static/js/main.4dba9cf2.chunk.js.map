{"version":3,"sources":["components/Profile.module.css","components/Transactions.module.css","components/Statistics.module.css","components/FriendList.module.css","components/Profile.js","components/Statistics.js","components/FriendList.js","components/Transactions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","src","alt","stat","label","quanity","followers","views","likes","Statistics","title","statistics","statList","map","item","key","id","style","backgroundColor","Math","random","percentage","FriendListItem","friends","friendList","friend","isOnline","green","red","width","Transactions","items","transactionsHistory","thead","tbody","tbodyPart","tbodyPart1","type","amount","currency","App","user","statisticalData","FriendList","transactions","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4dba9cf2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1jNs6\",\"avatar\":\"Profile_avatar__3xBNh\",\"name\":\"Profile_name__3P1Gr\",\"tag\":\"Profile_tag__Fe7GL\",\"location\":\"Profile_location__mN986\",\"stats\":\"Profile_stats__35hM0\",\"stat\":\"Profile_stat__rnMlx\",\"label\":\"Profile_label__tuNJS\",\"quanity\":\"Profile_quanity__8Eq0B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionsHistory\":\"Transactions_transactionsHistory__3Kgqb\",\"thead\":\"Transactions_thead__QctNV\",\"tbodyPart\":\"Transactions_tbodyPart__3j0Xq\",\"tbodyPart1\":\"Transactions_tbodyPart1__1THDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__3v7DL\",\"statistics\":\"Statistics_statistics__6zd4i\",\"item\":\"Statistics_item__2kfwl\",\"title\":\"Statistics_title__2Xb-4\",\"label\":\"Statistics_label__3oSfg\",\"percentage\":\"Statistics_percentage__2g1nC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"FriendList_red__1fnay\",\"green\":\"FriendList_green__1D6vm\",\"friendList\":\"FriendList_friendList__26mEw\",\"item\":\"FriendList_item__Y_PN_\",\"avatar\":\"FriendList_avatar__2cFOa\",\"name\":\"FriendList_name__128fN\"};","import React from 'react';\r\nimport styles from './Profile.module.css';\r\n\r\nfunction Profile({name, tag, location, avatar, stats} ){\r\n    return(\r\n        <div className={styles.profile}>\r\n            <div className=\"description\">\r\n                <img\r\n                src={avatar}\r\n                alt=\"user avatar\"\r\n                className={styles.avatar}\r\n                />\r\n                <p className={styles.name}>{name}</p>\r\n                <p className={styles.tag}>{tag}</p>\r\n                <p className={styles.location}>{location}</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li className={styles.stat}>\r\n                    <span className={styles.label}>Followers</span>\r\n                    <span className={styles.quanity}>{stats.followers}</span>\r\n                </li>\r\n                <li className={styles.stat}>\r\n                    <span className={styles.label}>Views</span>\r\n                    <span className={styles.quanity}>{stats.views}</span>\r\n                </li>\r\n                <li className={styles.stat}>\r\n                    <span className={styles.label}>Likes</span>\r\n                    <span className={styles.quanity}>{stats.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport styles from './Statistics.module.css';\r\n\r\nfunction Statistics({title, stats}){\r\n    return(\r\n        <section className={styles.statistics}>\r\n            {title &&(<h2 className={styles.title}>{title}</h2>)}\r\n\r\n            <ul className={styles.statList}>\r\n                {stats.map(stat=>(\r\n                    <li className={styles.item} key={stat.id} style={{backgroundColor: \"hsl(\" + Math.random() * 360 + \", 100%, 75%)\"}}>\r\n                        <span className={styles.label}>{stat.label}</span>\r\n                        <span className={styles.percentage}>{stat.percentage}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport styles from './FriendList.module.css'\r\n\r\nfunction FriendListItem({friends}){\r\n    return(\r\n        <ul className={styles.friendList}>\r\n            {friends.map(friend=>(\r\n                <li className={styles.item} key={friend.id}>\r\n                <span className={friend.isOnline?styles.green:styles.red}></span>\r\n                <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n                <p className={styles.name}>{friend.name}</p>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default FriendListItem;","import React from 'react';\r\nimport styles from './Transactions.module.css';\r\n\r\nfunction Transactions({items}){\r\n    return(\r\n        <table className={styles.transactionsHistory}>\r\n            <thead className={styles.thead}>\r\n                <tr>\r\n                    <th>TYPE</th>\r\n                    <th>AMOUNT</th>\r\n                    <th>CURRENCY</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className={styles.tbody}>\r\n                {items.map(item=>(\r\n                    <tr key={item.id} className={styles.tbodyPart}>\r\n                        <td className={styles.tbodyPart1}>{item.type}</td>\r\n                        <td className={styles.tbodyPart1}>{item.amount}</td>\r\n                        <td className={styles.tbodyPart1}>{item.currency}</td>\r\n                    </tr>\r\n                ))}\r\n                \r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Transactions;","import React from 'react';\nimport './App.css';\nimport Profile from './components/Profile';\nimport Statistics from './components/Statistics';\nimport FriendList from './components/FriendList';\nimport Transactions from './components/Transactions';\nimport transactions from './assets/transactions.json';\nimport friends from './assets/friends.json';\nimport user from './assets/user.json';\nimport statisticalData from './assets/statistical-data.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile {...user} />\n      <Statistics title=\"UPLOAD STATS\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <Transactions items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}