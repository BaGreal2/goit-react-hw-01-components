{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Transactions/Transactions.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/Transactions/Transactions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","styles","profile","src","alt","stat","label","quanity","followers","views","likes","Statistics","title","statistics","statList","map","item","key","id","style","backgroundColor","Math","random","percentage","defaultProps","FriendListItem","isOnline","green","red","width","FriendList","friends","friendList","friend","Transactions","items","transactionsHistory","thead","tbody","tbodyPart","tbodyPart1","type","amount","currency","App","user","statisticalData","transactions","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.201aabb3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__NRcQb\",\"avatar\":\"Profile_avatar__1r2iU\",\"name\":\"Profile_name__2yd8j\",\"tag\":\"Profile_tag__3no-n\",\"location\":\"Profile_location__2Nyfs\",\"stats\":\"Profile_stats__3Rm0J\",\"stat\":\"Profile_stat__wUnj9\",\"label\":\"Profile_label__kdclr\",\"quanity\":\"Profile_quanity__1LX5F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"FriendList_red__rGUvU\",\"green\":\"FriendList_green__1-Z9g\",\"friendList\":\"FriendList_friendList__Dyi0r\",\"item\":\"FriendList_item__5Ttbz\",\"avatar\":\"FriendList_avatar__2ck77\",\"name\":\"FriendList_name__2PIpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionsHistory\":\"Transactions_transactionsHistory__2f8-T\",\"thead\":\"Transactions_thead__1_ZlY\",\"tbodyPart\":\"Transactions_tbodyPart__lv92R\",\"tbodyPart1\":\"Transactions_tbodyPart1__1AEPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__2fehk\",\"statistics\":\"Statistics_statistics__3qbgp\",\"item\":\"Statistics_item__jIhQ4\",\"title\":\"Statistics_title__2hLJS\",\"label\":\"Statistics_label__2FPEv\",\"percentage\":\"Statistics_percentage__17ARR\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Profile.module.css';\n\nfunction Profile({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={styles.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n        <p className={styles.name}>{name}</p>\n        <p className={styles.tag}>{tag}</p>\n        <p className={styles.location}>{location}</p>\n      </div>\n\n      <ul className={styles.stats}>\n        <li className={styles.stat}>\n          <span className={styles.label}>Followers</span>\n          <span className={styles.quanity}>{stats.followers}</span>\n        </li>\n        <li className={styles.stat}>\n          <span className={styles.label}>Views</span>\n          <span className={styles.quanity}>{stats.views}</span>\n        </li>\n        <li className={styles.stat}>\n          <span className={styles.label}>Likes</span>\n          <span className={styles.quanity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.number.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.objectOf.isRequired,\n};\n\nexport default Profile;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={styles.statistics}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n\n      <ul className={styles.statList}>\n        {stats.map(stat => (\n          <li\n            className={styles.item}\n            key={stat.id}\n            style={{\n              backgroundColor: `hsl(${Math.random() * 360}, 100%, 75%)`,\n            }}\n          >\n            <span className={styles.label}>{stat.label}</span>\n            <span className={styles.percentage}>{stat.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf,\n};\nStatistics.defaultProps = {\n  title: 'Title',\n  stats: [],\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FriendList.module.css';\n\nfunction FriendListItem({ avatar, name, isOnline, id }) {\n  return (\n    <li className={styles.item} key={id}>\n      <span className={isOnline ? styles.green : styles.red} />\n      <img className={styles.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default FriendListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport styles from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => (\n        <FriendListItem {...friend} />\n      ))}\n    </ul>\n  );\n}\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.exact({\n      avatar: PropTypes.string,\n      name: PropTypes.string,\n      isOnline: PropTypes.bool,\n      id: PropTypes.number,\n    }),\n  ).isRequired,\n};\nexport default FriendList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Transactions.module.css';\n\nfunction Transactions({ items }) {\n  return (\n    <table className={styles.transactionsHistory}>\n      <thead className={styles.thead}>\n        <tr>\n          <th>TYPE</th>\n          <th>AMOUNT</th>\n          <th>CURRENCY</th>\n        </tr>\n      </thead>\n\n      <tbody className={styles.tbody}>\n        {items.map(item => (\n          <tr key={item.id} className={styles.tbodyPart}>\n            <td className={styles.tbodyPart1}>{item.type}</td>\n            <td className={styles.tbodyPart1}>{item.amount}</td>\n            <td className={styles.tbodyPart1}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactions.propTypes = {\n  items: PropTypes.arrayOf.isRequired,\n};\n\nexport default Transactions;\n","import React from 'react';\nimport './App.css';\nimport Profile from './components/Profile/Profile';\nimport Statistics from './components/Statistics/Statistics';\nimport FriendList from './components/FriendList/FriendList';\nimport Transactions from './components/Transactions/Transactions';\nimport transactions from './assets/transactions.json';\nimport friends from './assets/friends.json';\nimport user from './assets/user.json';\nimport statisticalData from './assets/statistical-data.json';\n\nfunction App() {\n  return (\n    <>\n      <Profile {...user} />\n      <Statistics title=\"UPLOAD STATS\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <Transactions items={transactions} />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}